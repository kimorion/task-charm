// <auto-generated />
using System;
using Charm.Core.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Charm.Core.Infrastructure.Migrations
{
    [DbContext(typeof(CharmDbContext))]
    [Migration("20201122142829_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Charm.Core.Infrastructure.Entities.Gist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ParentGistId")
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ParentGistId");

                    b.HasIndex("UserId");

                    b.ToTable("Gists");
                });

            modelBuilder.Entity("Charm.Core.Infrastructure.Entities.Reminder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<TimeSpan?>("Advance")
                        .HasColumnType("interval");

                    b.Property<DateTimeOffset>("Deadline")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("GistId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Deadline");

                    b.HasIndex("GistId")
                        .IsUnique();

                    b.ToTable("Reminders");
                });

            modelBuilder.Entity("Charm.Core.Infrastructure.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Charm.Core.Infrastructure.Entities.Gist", b =>
                {
                    b.HasOne("Charm.Core.Infrastructure.Entities.Gist", "ParentGist")
                        .WithMany()
                        .HasForeignKey("ParentGistId");

                    b.HasOne("Charm.Core.Infrastructure.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentGist");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Charm.Core.Infrastructure.Entities.Reminder", b =>
                {
                    b.HasOne("Charm.Core.Infrastructure.Entities.Gist", "Gist")
                        .WithOne("Reminder")
                        .HasForeignKey("Charm.Core.Infrastructure.Entities.Reminder", "GistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gist");
                });

            modelBuilder.Entity("Charm.Core.Infrastructure.Entities.Gist", b =>
                {
                    b.Navigation("Reminder");
                });
#pragma warning restore 612, 618
        }
    }
}
